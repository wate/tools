## 利用するPHPのバージョン(default / 7.1 / 5.6 など)
php_version: "default"
## モジュール版のPHPを利用するか否か
## (※PHPのバージョンが7未満を指定された場合はCGI版を利用するように自動的に設定が変更されます)
php_module_mode: true
## Imagickモジュールを利用するか否か(true / false)
php_use_imageck: true
## php.iniの設定
php_ini:
  default_charset: UTF-8
  internal_encoding: ""
  input_encoding: ""
  output_encoding: ""
  post_max_size: 8M
  max_input_vars: 1000
  upload_max_filesize: 2M
  max_file_uploads: 20
  date.timezone: Asia/Tokyo
  mbstring.language: Japanese
  mbstring.detect_order: auto

wordpress:
  ## ダウンロードするWordPressの設定
  version: latest
  locale: ja
  ## インストールの設定
  url: "{{ ansible_user }}.sakura.ne.jp"
  title: "サンプルサイト"
  admin_user: "supervisor"
  admin_password: "str0ngp@55w0rd"
  admin_email: "info@example.com"
  ## データベースの設定
  db_host: "mysqlXXX.db.sakura.ne.jp"
  db_name: "{{ ansible_user }}_wordpress"
  db_user: "{{ ansible_user }}"
  db_password: "vErY_VeRy_Str0ng_P@55w0rd"
  db_prefix: "wp_"
  db_charset: "utf8mb4"
  ## パーマリンクの設定
  rewrite_structure: "/%category%/%postname%/"
  extra_setting: |
    define('WP_DEBUG', false);
    define('WP_DEBUG_DISPLAY', false);
    define('WP_POST_REVISIONS', false);
    define('DISALLOW_FILE_EDIT', true);
  ## アクセスコントロールファイルの設定
  htaccess: |
    <IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /
    RewriteRule ^index\.php$ - [L]
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule . /index.php [L]
    </IfModule>
  ## インストールするプラグインの設定
  plugins:
    # Autoptimizeプラグイン
    - name: autoptimize
      activate: true
    # Disable Google Fontsプラグイン
    - name: disable-google-fonts
      activate: true
    # ImageMagick Engineプラグイン
    - name: imagemagick-engine
      activate: true
    # Remove query strings from resourcesプラグイン
    - name: remove-query-strings-from-static-resources
      activate: true
    # Protect Uploadsプラグイン
    - name: protect-uploads
      activate: true
    # All In One WP Security & Firewallプラグイン
    - name: all-in-one-wp-security-and-firewall
      activate: true
    # TypeSquare Webfonts SAKURA for SAKURA Rental Serverプラグイン
    - name: ts-webfonts-for-sakura
      activate: true
    # さくらのレンタルサーバ 簡単SSL化プラグイン
    - name: sakura-rs-wp-ssl
    # - name: some-plugin-name
    #   activate: true (optional)
    #   version: 1.2.3 (optional)
  ## インストールするテーマの設定
  themes: []
    # - name: some-theme-name
    #   version: 1.2.3 (optional)
    #   active: true (optional)
  ## インポートするデータの設定
  # import:
  #   file: https://raw.githubusercontent.com/jawordpressorg/theme-test-data-ja/master/wordpress-theme-test-date-ja.xml
  #   authors: create

wordpress_backup_job:
  enabled: true
  hour: "{{ 6 | random(seed=inventory_hostname) }}"
  minute: "{{ 59 | random(seed=inventory_hostname) }}"

wordpress_update_job:
  enabled: true
  hour: "{{ 7 | random(seed=inventory_hostname, start=1) }}"
  minute: "{{ 59 | random(seed=inventory_hostname) }}"

## SSHの公開鍵の設定
authorized_keys: []
  # - key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  #   state: true (optional)
  # - key: "{{ lookup('file', '~/.ssh/removed.pub') }}"
  #   state: false (optional)

usacloud:
  # usacloudをインストールするか否か(true / false)
  install: true
  # usacloudのバージョン
  version: "0.11.0"
  # さくらのクラウド APIキー(アクセストークン)
  token: "{{ lookup('env', 'SAKURACLOUD_ACCESS_TOKEN') }}"
  # さくらのクラウド APIキー(アクセストークンシークレット)
  secret: "{{ lookup('env', 'SAKURACLOUD_ACCESS_TOKEN_SECRET') }}"
  # ゾーン: is1a / is1b / tk1a / tk1v
  zone: "{{ lookup('env', 'SAKURACLOUD_ZONE') }}"
  # デフォルトの出力形式: table / json / csv / tsv
  output_type: table
  # オブジェクトストレージ アクセスキー(アクセスキーID)
  # ojs_access_key_id: "{{ lookup('env', 'SACLOUD_OJS_ACCESS_KEY_ID') }}"
  # オブジェクトストレージ アクセスキー(シークレットアクセスキー)
  # ojs_secret_access_key: "{{ lookup('env', 'SACLOUD_OJS_SECRET_ACCESS_KEY') }}"
